-> CSS stands for Cascading Style Sheets. CSS is used to define styles for web pages, including the design, layout and variations in display for different devices and screen sizes.

-> css ruleset
   CSS is a rule or set of rules that describe the formatting of individual elements on a web page. The rule consists of two parts: the selector and the next declaration block.
   * The first is always the selector, it tells the browser which element or elements of the web page will be styled.
   * Next is the declaration block, between the curly braces are specified formatting commands which are used by the browser to stylize the selected selector element.
-> possible ways to apply CSS styles to a web page
   There are three ways to apply CSS to HTML: Inline, internal, and external.
   
   1.Inline CSS- Inline CSS is specified directly in the opening html tags of the elements,It is entered into the style-attribute within HTML
     Ex: <p style="font-weight:bold;">Bold Font</p>
   2.Internal CSS- internal styles are used for the whole page. Inside the head element of html, using style-tags styles for the page.
     Ex: <!DOCTYPE html>
            <html>
              <head>
                <title>Internal CSS Example</title>
                <style>
                  p {
                      color: red;
                  }

                  a {
                      color: blue;
                  }
              </style>
              ...
   3.In external CSS- style-sheet stored in a separate file.To refer to that file from the HTML page,add the link element to the head element.
     <!DOCTYPE html>
        <html>
        <head>
            <title>External CSS Example</title>
            <link rel="stylesheet" type="text/css" href="style.css">
        ...
   
-> New features in CSS3:
      1.Advanced Selectors- CSS3 introduced a number of powerful selectors like (:last-child,:nth-child(n),:nth-of-type(n) in Pseudo-classes),
      (::placeholder in Pseudo Elements), General Sibling. 
      2.The color keyword list has been extended in the CSS3 color module to include 147 additional keyword colors,
      CSS3 also provides us with a number of other options RGBA and Opacity.
      3.Rounded Corners: border-radius
      4.box-shadow,Text Shadow
      5.Background Gradients- both Linear Gradients, Radial Gradients
      6.Multiple Background Images- it provides us with the ability to add more than one background 
      7.Flexbox gaps in flex gap, row-gap, and column-gap properties
      
-> css selectors:CSS selectors are used to select the content for add styles to them
   i) Universal Selector: The universal selector works like a wild card character, selecting all elements on a page.
    ex:this selector used for override defult values like-removing defult padding and marging
       *{
         padding:0;
         margging:0;
        }
   ii) Element Type Selector: This selector match one or more HTML elements of the same name using tag names.
         ul {
            list-style: none;
            border: solid 1px #ccc;
         }
    iii) ID Selector: This selector matches any HTML element that has an ID attribute with the same value as that of the selector.
        in ID selector is a name preceded by a asterisk character (“#”)
              #container {
               width: 960px;
               margin: 0 auto;
              }
     iv) Class Selector: The class selector also matches all elements on the page that have their class attribute set to the same value as the class.
        In the CSS, a class selector is a name preceded by a full stop (“.”)
               .container {
                  width: 960px;
                  margin: 0 auto;
              }
  
      v) Combinator selector
      a) Descendant Combinator:it combines two or more selectors,typically represented by a single space (" ")
      ex:This declaration block will apply to all elements that have a class of box that are inside an element with an ID of container
         #container .box {
            float: left;
            padding-bottom: 15px;
         }
                                    <div id="container">
                                      <div class="box"></div>        <- selected both 
                                      <div class="box-2">                  |
                                          <div class="box"></div>    <-----|
                                      </div>
                                   </div>
      b) Child Combinator:A selector that uses the child combinator is similar to a selector that uses a descendant combinator, except it only targets immediate child elements.
      typically represented by a greter chacter(">")
      ex:The selector will match all elements that have a class of box and that are immediate children of the #container element. 
             #container > .box {
               float: left;
               padding-bottom: 15px;
             }
                                    <div id="container">
                                      <div class="box"></div>        <- selected this one only 
                                      <div class="box-2">                 
                                          <div class="box"></div>    
                                      </div>
                                   </div>
       c) General Sibling Combinator:selects all elements that are next siblings of a specified element.(not necessarily immediately),
       typically represented by chacter("~")
       ex:this example, all paragraph elements (<p>) will be styled with the specified rules, but only if they are siblings of <h2> elements.
       There could be other elements in between the <h2> and <p>, and the styles would still apply.
       h2 ~ p {
         margin-bottom: 20px;
      }  
                           <h2>Title</h2>
                           <p>Paragraph example.</p>-----------|
                           <p>Paragraph example.</p>-----------|
                           <p>Paragraph example.</p>-----------|   <- selected these all elements 
                           <div class="box">                   |
                             <p>Paragraph example.</p>         |
                           </div>                              |
                           <p>Paragraph example.</p>-----------|
                           
        d)Adjacent Sibling Combinator:uses the plus symbol (+), and is almost the same as the general sibling selector.The difference is that the targeted element
        must be an immediate sibling, not just a general sibling.
        ex:In this example will apply the specified styles only to paragraph elements that immediately follow other paragraph elements                   
           h2 ~ p {
            margin-bottom: 20px;
           }  
                           <h2>Title</h2>
                           <p>Paragraph example.</p>-----------|<- selected these all elements 
                           <p>Paragraph example.</p>
                           <p>Paragraph example.</p>   
                           <div class="box">                   
                             <p>Paragraph example.</p>        
                           </div>                             
                           <p>Paragraph example.</p>
   
         vi) Attribute Selector:
         vii)Pseudo-class: 
         viii)Pseudo-element:
         
->difference between Pseudo-classes and pseudo-elements
        * A pseudo-class is a selector,the selection of something that cannot be expressed by a simple selector,pseudo-class always consists of a "colon"(:)
         for example- :hover used to select elements when is mouse over them
         
        *pseudo-element allows us to create items that do not normally exist in the document tree,pseudo-element always consists of a "double colon"(::)
         for ex:-Insert content before, or after, the content of an element using conetent property, by defult is inline 
         and used to style specified parts of an element ex:Style the first letter, last-letter, or line, of an element
            
          ~~list of pseudo-classes in CSS3
          i)Tree-structural pseudo-classes
            These pseudo-classes relate to the location of an element within the document tree.
            :first-child
            :nth-child(n)
            :last-child
            :only-child
         ii) Dynamic pseudo-classes for links
             :link
             :visited
             :hover
             :active
             :focus
         iii)UI element states pseudo-classes          
             :enabled
             :disabled
             :checked
        ~~list of Pseudo-elements in css3
            ::before
            ::after
            ::first-letter
            ::first-line
      
->Combinator selector, A combinator is the character in a selector that connects two selectors together. There are four types of combinators.
         a) Descendant Combinator (space): The descendant selector matches all elements that are descendants of a specified element.
         b) Child Combinator (>): The child selector selects all elements that are the children of a specified element.
         c) Adjacent Sibling Combinator (+): The adjacent sibling selector selects all elements that are the adjacent siblings of a specified element.
         d) General Sibling Combinator (~): The general sibling selector selects all elements that are siblings of a specified element.
         
->difference between the “nth-child()” and “nth-of-type()” selectors
         :nth-child(n)- use to select an interval of a selector regardless of the type of element it is.
         :nth-type-chid(n)- to select a specific type only and apply an interval selection from there.
         ex:   article p:nth-child(odd) {                                                   
               }
               
               article p:nth-of-type(odd) {
               }
         
          <article>
              <h1>Here's a Header</h1>                                                   <-------interval of nth-child start from here  
              <p>I'm a paragraph with all kinds of information.</p>                      <-------interval of nth-type-child start from here 
              <p>Let's add another paragraph for fun.</p>
              <p>yadda yadda yadda</p>
              <p>blah blah blah</p>
              <p>yadda yadda yadda</p>
              <h3>Here's a Subheader</h3>
              <p>blah blah blah</p>
              <p>And maybe just one more.</p>
           </article>
        
->CSS “box model”:-is a rectangular layout for HTML elements,this wraps around every HTML element. It consists of: borders, padding, margins, and the actual content.
        box-consitis:
                      Content: The content of the box, where text and images appear.
                      Padding: A transparent area surrounding the content (i.e.,space between the border and the content)
                      Border: A border surrounding the padding 
                      Margin: A transparent area surrounding the border (i.e.,space between the border and any neighboring elements)
         size of the box calculated like : total-Width= width-content + padding-left + padding-right + border-left + border-right
                                           total-height=height-content + padding-top + padding-bottom + border-top + border-bottom
         
->difference between border-box and content-box:
        *content-box:–Default box-sizing property.The width and height properties includes only the content.Border and padding are not included.
        *border-box – The width and height properties includes content, padding and border.
        
->purpose of the box-sizing property:
       
       
       
       
       
->z-index: 
       The z-index helps "specify the stack order of positioned elements" that may overlap one another. The z-index default value is zero, and can take on either
       a positive or negative number. An element with a higher z-index is always stacked above than a lower index.
       z-index can take 4 kind of values:
                                         Initial:it Sets default value(0).
                                         Number:Orders the stack order.(either a positive or negative number).
                                         Inherit:means Inherits property from its parent element.
                                         Auto:it Sets the stack order equal to its parents.
       ex: https://learning-zone.github.io/css-interview-questions/assets/files/z-index.html
                                  <style>
                                    img {
                                      position: absolute;
                                      left: 0px;
                                      top: 0px;
                                      padding: 5px 2px;
                                      margin: 5px 1px 2px;
                                      z-index: -1;
                                    }

                                    p {
                                      color: red;
                                      font-size: 20px;
                                      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
                                    }
                               </style>
                                <body>
                                  <h1>The z-index Property</h1>
                                  <img src="../images/horse.jpg" alt="Horse Image" />
                                  <p>Because the image has a z-index of -1, it will be placed behind the heading.</p>
                                </body>
        
->difference between visibility: hidden; and display: none?
            * visibility:hidden, 'simply hides the element' but it will occupy space and affect the layout of the document.
            * display:none,removes the element from the normal layout flow (causes DOM reflow). It will not affect the layout of the document nor occupy space.
         
->CSS position Property: 
        
        
        
        
        
->between relative and absolute position
        
        
        
-> difference between block, inline and inline-block element
        *Block Elements
            The block elements always start on a new line. They will also take space of an entire row or width.
            we can add space to all four sides on an block element, 
            List of block elements are <p>, <h1>, <div>, <header>,<li>,<form>,<aside>,<hr>,<nav>,<main>,<table>,<ul>,<ol>,<dl>
        *Inline Elements 
            An inline element does not start on a new line. An inline element only takes up as much width as necessary.
            comes to margins and padding You can add space to the left and right on an inline element, but you cannot add height to the top or bottom padding or margin 
            of an inline element.
            examples of inline elements are <a>,<b>,<big>,<button> <span> ,<strong>,<sub>,<sup>
        * Inline-block:
             Inline-block elements are similar to inline elements, except they can have padding and margins added on all four sides.
        
->
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
